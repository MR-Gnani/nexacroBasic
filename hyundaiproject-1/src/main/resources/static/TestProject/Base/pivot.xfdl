<?xml version="1.0" encoding="utf-8"?>
<FDL version="1.5">
  <TypeDefinition url="..\default_typedef.xml"/>
  <Form id="pivot" left="0" top="0" width="1002" height="670" titletext="New Form" onload="pivot_onload" onkeydown="pivot_onkeydown">
    <Layouts>
      <Layout>
        <Grid id="grd_pivot" taborder="0" left="20" top="83" right="20" bottom="20" autofittype="col" oncellclick="grd_pivot_oncellclick" binddataset="ds_pivot">
          <Formats>
            <Format id="default"/>
          </Formats>
        </Grid>
        <Static id="Static00" taborder="1" text="▣ 카테고리별 주문 목록" left="20" top="14" width="292" height="28" style="font:bold 16 Dotum;"/>
        <Div id="Div00" taborder="2" text="Div00" top="16" height="30" right="20" style="border:1 none #808080 ;" width="321">
          <Layouts>
            <Layout>
              <Button id="btn_search" taborder="0" text="조회" top="2" width="60" height="24" right="62" style="background:#4f81bdff;color:#ffffffff;cursor:hand;" onclick="Div00_btn_search_onclick"/>
              <Button id="btn_excel" taborder="1" text="엑셀" top="2" height="24" width="60" style="background:#4f81bdff;color:#ffffffff;cursor:hand;" right="0" onclick="Div00_btn_excel_onclick"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="Div01" taborder="3" text="Div01" left="20" top="44" height="37" style="border:1 solid #808080ff ;" right="20">
          <Layouts>
            <Layout>
              <Static id="Static00" taborder="0" text="카테고리" left="22" top="8" width="69" height="20" style="align:right middle;"/>
              <Combo id="cbo_category" taborder="1" text="- 선택 -" left="96" top="8" width="142" height="20" innerdataset="@ds_category" codecolumn="CATEGORY_ID" datacolumn="CATEGORY_NAME" onkeydown="common_onkeydown"/>
              <Static id="st_name" taborder="2" text="상품 명" left="258" top="8" width="90" height="20" style="align:right middle;"/>
              <Static id="Static02" taborder="3" text="주문일" left="532" top="8" width="90" height="20" style="align:right middle;"/>
              <Calendar id="cal_from" taborder="5" left="627" top="8" width="117" height="20" onkeydown="common_onkeydown"/>
              <Calendar id="cal_to" taborder="6" left="786" top="8" width="115" height="20" onkeydown="common_onkeydown"/>
              <Static id="Static03" taborder="7" text="-" left="749" top="8" width="32" height="20" style="align:center middle;"/>
              <Edit id="edt_name" taborder="8" left="353" top="8" width="159" height="20" onkeydown="common_onkeydown"/>
            </Layout>
          </Layouts>
        </Div>
        <Button id="btn_menu" taborder="4" text="MENULIST" left="270" top="20" width="80" height="20" onclick="btn_menu_onclick"/>
      </Layout>
    </Layouts>
    <Objects>
      <Dataset id="ds_pivot">
        <ColumnInfo>
          <Column id="CATEOGYRY_ID" type="STRING" size="256"/>
          <Column id="CATEGORY_NAME" type="STRING" size="256"/>
          <Column id="PRODUCT_NAME" type="STRING" size="256"/>
          <Column id="ORDER_YEAR" type="STRING" size="256"/>
          <Column id="ORDER_MONTH" type="STRING" size="256"/>
          <Column id="ORDER_COUNT" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_yearMonth"/>
      <Dataset id="ds_grdPivot">
        <ColumnInfo>
          <Column id="CATEGORY_NAME" type="STRING" size="256"/>
          <Column id="PRODUCT_NAME" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
      <Dataset id="ds_cond">
        <ColumnInfo>
          <Column id="sendCategory" type="STRING" size="256"/>
          <Column id="sendProduct" type="STRING" size="256"/>
          <Column id="sendFrom" type="STRING" size="256"/>
          <Column id="sendTo" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
      <Dataset id="ds_category">
        <ColumnInfo>
          <Column id="CATEGORY_ID" type="STRING" size="256"/>
          <Column id="CATEGORY_NAME" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="Div01.cbo_category" propid="value" datasetid="ds_cond" columnid="sendCategory"/>
      <BindItem id="item1" compid="Div01.edt_name" propid="value" datasetid="ds_cond" columnid="sendProduct"/>
      <BindItem id="item2" compid="Div01.cal_from" propid="value" datasetid="ds_cond" columnid="sendFrom"/>
      <BindItem id="item3" compid="Div01.cal_to" propid="value" datasetid="ds_cond" columnid="sendTo"/>
    </Bind>
    <Script type="xscript5.0"><![CDATA[/*
화면명 : 카테고리별 주문 목록 피벗
작성자 : 김진한
작성일자 : 2024/09/23
*/


/***************************************************
* 함수명 : pivot_onload 
* 내  용 : 로드 함수
****************************************************/
this.pivot_onload = function(obj:Form, e:nexacro.LoadEventInfo)
{
	this.fn_loadCategoryInfo();
}

/***************************************************
* 함수명 : fn_loadCategoryInfo 
* 내  용 : 로드 트랜잭션 호출
****************************************************/
this.fn_loadCategoryInfo = function(){
	var strSvcId = "fn_loadCategoryInfo";
	var strSvcUrl = "http://localhost:8080/loadCategoryInfo";
	var inData = ""
	var outData = "ds_category=outDataset";
	var strAvg = "";
	var callBackFnc = "fn_Callback_loadCategoryInfo";
	
	this.transaction(strSvcId, strSvcUrl, inData, outData, strAvg, callBackFnc);
}

/***************************************************
* 함수명 : fn_Callback_loadCategoryInfo 
* 내  용 : (콜백)
****************************************************/
this.fn_Callback_loadCategoryInfo = function(strSvcId, nErrorCode, strErrorMsg) {
	if(nErrorCode == 0) {
	var existingCategory = this.ds_category.getColumn(0, "CATEGORY_NAME");
	
	if (existingCategory !== "- 전체 -") {
            var newRow = this.ds_category.insertRow(0);
            this.ds_category.setColumn(newRow, "CATEGORY_ID", "");
            this.ds_category.setColumn(newRow, "CATEGORY_NAME", "- 전체 -");
        }
	}
	this.Div01.cbo_category.set_index(0);
}




/***************************************************
* 함수명 : Div00_btn_search_onclick 
* 내  용 : 조회 클릭 
****************************************************/
this.Div00_btn_search_onclick = function(obj:Button, e:nexacro.ClickEventInfo)
{	
	this.fn_checkVal();
}

/***************************************************
* 함수명 : fn_checkVal 
* 내  용 : 조회 유효성 검사
****************************************************/
this.fn_checkVal = function(){
	var fromDate = this.ds_cond.getColumn(0, "sendFrom");
	var toDate = this.ds_cond.getColumn(0, "sendTo");
	
	if(fromDate < 19000000) {
		alert("1900년도 이후로 입력이 가능합니다.");
		return;
	}
	
	if(toDate < 19000000) {
		alert("1900년도 이후로 입력이 가능합니다.");
		return;
	}
	
	if(toDate-fromDate < 0) {
		alert("시작 날짜가 종료 날짜보다 같거나 더 늦습니다. 올바른 날짜 범위를 입력해 주세요.");
		return;
	}
	
	this.fn_loadProductByCategory();
}

/***************************************************
* 함수명 : fn_loadProductByCategory 
* 내  용 : 조회 트랜잭션 호출
****************************************************/
this.fn_loadProductByCategory = function(){
	var strSvcId = "loadProductByCategoryPivot";
	var strSvcUrl = "http://localhost:8080/loadProductByCategoryPivot";
	var inData = "inDataset=ds_cond"
	var outData = "ds_pivot=outDataset, ds_yearMonth=outDataset2";
	var strAvg = "";
	var callBackFnc = "fn_Callback_loadProductByCategoryPivot";
	
	this.transaction(strSvcId, strSvcUrl, inData, outData, strAvg, callBackFnc);
}

/***************************************************
* 함수명 : fn_Callback_loadProductByCategoryPivot 
* 내  용 : (콜백)
****************************************************/
this.fn_Callback_loadProductByCategoryPivot = function(strSvcId, nErrorCode, strErrorMsg) {
	if(nErrorCode == 0) {
		this.fn_render();
	}
}

/***************************************************
* 함수명 : fn_render 
* 내  용 : 그리드 랜더 함수
****************************************************/
this.fn_render = function(){
	// 고유년도 저장할 객체
	var yearMonths = {};
	
	this.grd_pivot.setBindDataset("ds_pivot");
	
	var v_Formats = "";
	var v_Columns = "";
	var v_Rows = "";
	var v_BandHead = "";
	var v_BandBody = "";
	
	//:::::::::::컬럼 설정::::::::::://
	v_Columns += '<Column size="120" />\n';
	v_Columns += '<Column size="250" />\n';
	
	// 월 수 만큼 컬럼행 추가하면서 년도 저장(중복값제외).
	for(var i=0; i<this.ds_yearMonth.getRowCount(); i++){
		v_Columns +=  '<Column size="45" />\n';
		var year = this.ds_yearMonth.getColumn(i, "YEAR");
		var month = this.ds_yearMonth.getColumn(i, "MONTH");
		
		this.ds_pivot.addColumn(year + "-" + month, "STRING");
		
		 // 연도 객체가 없으면 초기화
		if (!yearMonths[year]) {
			yearMonths[year] = []; // 배열을 사용하여 월 저장
		}
		
		// 배열에 월이 없으면 추가 (중복 제거)
		if (yearMonths[year].indexOf(month) === -1) {
			yearMonths[year].push(month);
		}
	}
	
	// 연도별 월 수로 변환
	var yearDataCount = Object.keys(yearMonths).length;
	

	//:::::::::::행 설정::::::::::://

	v_Rows += '<Row size="23" band="head" />\n';
	v_Rows += '<Row size="23" band="head" />\n';
 	v_Rows += '<Row size="23"/>\n';
	
	//:::::::::::헤더 밴드 영역::::::::::://
	var colNum = 2;
	v_BandHead += '<Cell colspan="2"/>\n';
	
	// 년도별 셀 추가
	for (var year in yearMonths) {
		if (yearMonths.hasOwnProperty(year)) {
			var colspan = yearMonths[year].length; // 해당 년도의 고유한 월 수
			
			// 년도 셀 추가
			v_BandHead += '<Cell col="' + colNum + '" colspan="' + colspan + '" text="' + year + '년"/>\n';
			
			// 다음 컬럼 번호 계산 (현재 컬럼 번호에 해당 월 수 추가)
			colNum += colspan;
		}
		
	}

	v_BandHead += '<Cell row="1" text="카테고리 명"/>\n';
	v_BandHead += '<Cell row="1" col="1" text="상품 명"/>\n';
	
	//바디밴드
	v_BandBody += '<Cell text="bind:CATEGORY_NAME"/>\n';
	v_BandBody += '<Cell col="1" text="bind:PRODUCT_NAME" style="align:left; padding:3;"/>\n';
	
	var yearMonthMap = {};
	var monthCol = 2;
	for (i=0; i<this.ds_yearMonth.getRowCount(); i++){
		var monthData = this.ds_yearMonth.getColumn(i, "MONTH");
		var yearData = this.ds_yearMonth.getColumn(i, "YEAR");
		var key = yearData + "-" + monthData;
		yearMonthMap[key] = monthCol;
		
		v_BandHead += '<Cell row="1" col="' + monthCol + '" text="' + monthData + '월"/>\n';
		v_BandBody += '<Cell col="' + monthCol + '" text="bind:' + yearData + '-' + monthData + '"/>\n';
	
		monthCol++;
	}
		
	for(i=0; i<this.ds_pivot.getRowCount(); i++){
		var orderYear = this.ds_pivot.getColumn(i, "ORDER_YEAR");
		var orderMonth = this.ds_pivot.getColumn(i, "ORDER_MONTH");
		var orderCount = this.ds_pivot.getColumn(i, "ORDER_COUNT");
		
		this.ds_pivot.setColumn(i, orderYear + "-" + orderMonth, orderCount);
	}

	//최종 포맷 설정
	v_Formats = '<Formats>\n';
	v_Formats += '<Format id="default">\n';
	v_Formats += '<Columns>\n' + v_Columns + '</Columns>\n';
	v_Formats += '<Rows>\n' + v_Rows + '</Rows>\n';
	v_Formats += '<Band id="head">\n' + v_BandHead + '</Band>\n';
	v_Formats += '<Band id="body">\n' + v_BandBody + '</Band>\n';
	v_Formats += '</Format>\n';
	v_Formats += '</Formats>\n';
	
	this.grd_pivot.set_enableredraw(false);
	this.grd_pivot.set_formats(v_Formats);
	this.grd_pivot.set_enableredraw(true);
	
}

/***************************************************
* 함수명 : common_onkeydown 
* 내  용 : 엔터 키 입력 함수(조회)
****************************************************/
this.common_onkeydown = function(obj:Combo, e:nexacro.KeyEventInfo)
{
	if (e.keycode == 13) {  //엔터키 keycode
		obj.updateToDataset();
        this.Div00_btn_search_onclick();  
    }
}

/***************************************************
* 함수명 : btn_menu_onclick 
* 내  용 : 테스트용 메뉴 버튼
****************************************************/
this.btn_menu_onclick = function(obj:Button, e:nexacro.ClickEventInfo)
{
    // 이동할 URL 설정
    var url = "http://localhost:8080/TestProject/index.html";

    // 또는, 현재 탭에서 열기
    window.location.href = url; // 현재 탭에서 열기
}

this.Div00_btn_excel_onclick = function(obj:Button, e:nexacro.ClickEventInfo)
{
	var arrayTemp = [1,3,2,5,4,10,8,9,7,6]
	trace(NaN === NaN);
}
]]></Script>
  </Form>
</FDL>
